[32m[I 2022-07-14 14:26:31,512][0m Using an existing study with name 'gru_optuna' instead of creating a new one.[0m
[32m[I 2022-07-14 20:53:05,036][0m Trial 3 finished with value: 0.003038547933101654 and parameters: {'latent_dimension': 11, 'k': 49}. Best is trial 3 with value: 0.003038547933101654.[0m
[32m[I 2022-07-15 06:38:20,750][0m Trial 4 finished with value: 0.0013281598221510649 and parameters: {'latent_dimension': 48, 'k': 54}. Best is trial 4 with value: 0.0013281598221510649.[0m
[32m[I 2022-07-15 08:48:26,553][0m Trial 5 finished with value: 0.0029969678726047277 and parameters: {'latent_dimension': 13, 'k': 11}. Best is trial 4 with value: 0.0013281598221510649.[0m
[32m[I 2022-07-16 01:06:51,933][0m Trial 6 finished with value: 0.0009722570539452136 and parameters: {'latent_dimension': 50, 'k': 91}. Best is trial 6 with value: 0.0009722570539452136.[0m
[33m[W 2022-07-16 01:06:59,039][0m Trial 7 failed because of the following error: RuntimeError('CUDA out of memory. Tried to allocate 54.00 MiB (GPU 0; 31.75 GiB total capacity; 29.06 GiB already allocated; 24.00 MiB free; 30.27 GiB reserved in total by PyTorch)')[0m
Traceback (most recent call last):
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/optuna/study/_optimize.py", line 213, in _run_trial
    value_or_values = func(trial)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/Main.py", line 145, in objective
    GNN, validation_loss = train_dss.trainDSS(loader_train, loader_val, optimizer, scheduler, min_val_loss, epoch, n_output)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyTrain.py", line 112, in trainDSS
    F, train_loss, loss_dict = self.net(train_data)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyDSS.py", line 60, in forward
    mess_to = self.phi_to(H, batch.edge_index, batch.edge_attr)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyDSS.py", line 139, in forward
    return self.propagate(edge_index, x = x, edge_attr = edge_attr)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py", line 237, in propagate
    out = self.message(**msg_kwargs)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyDSS.py", line 143, in message
    tmp = torch.cat([x_i, x_j, edge_attr], dim = 1)
RuntimeError: CUDA out of memory. Tried to allocate 54.00 MiB (GPU 0; 31.75 GiB total capacity; 29.06 GiB already allocated; 24.00 MiB free; 30.27 GiB reserved in total by PyTorch)
Traceback (most recent call last):
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/Main.py", line 183, in <module>
    study.optimize(objective, n_trials=1000)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/optuna/study/study.py", line 400, in optimize
    _optimize(
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/optuna/study/_optimize.py", line 163, in _optimize_sequential
    trial = _run_trial(study, func, catch)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/optuna/study/_optimize.py", line 264, in _run_trial
    raise func_err
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/optuna/study/_optimize.py", line 213, in _run_trial
    value_or_values = func(trial)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/Main.py", line 145, in objective
    GNN, validation_loss = train_dss.trainDSS(loader_train, loader_val, optimizer, scheduler, min_val_loss, epoch, n_output)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyTrain.py", line 112, in trainDSS
    F, train_loss, loss_dict = self.net(train_data)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyDSS.py", line 60, in forward
    mess_to = self.phi_to(H, batch.edge_index, batch.edge_attr)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyDSS.py", line 139, in forward
    return self.propagate(edge_index, x = x, edge_attr = edge_attr)
  File "/mnt/beegfs/home/quattromini/miniconda3/envs/neural/lib/python3.9/site-packages/torch_geometric/nn/conv/message_passing.py", line 237, in propagate
    out = self.message(**msg_kwargs)
  File "/mnt/beegfs/home/quattromini/NeuralNets/v1_gru_optuna/MyDSS.py", line 143, in message
    tmp = torch.cat([x_i, x_j, edge_attr], dim = 1)
RuntimeError: CUDA out of memory. Tried to allocate 54.00 MiB (GPU 0; 31.75 GiB total capacity; 29.06 GiB already allocated; 24.00 MiB free; 30.27 GiB reserved in total by PyTorch)
srun: error: n101: task 0: Exited with exit code 1
